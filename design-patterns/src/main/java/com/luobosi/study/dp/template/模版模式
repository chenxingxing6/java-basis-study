模版模式：定义一个操作中算法的框架，而将一些步骤延迟到子类中，模版方法使得子类可以不改变一个算法的结构即可以重定义该算法的某些特定步骤。

在程序开发中经常会遇到这种情况：某个方法要实现的算法需要多个步骤，但其中有些步骤是固定不变的，而另一些步骤则是不固定的。

在模版方法模式中，一个算法可以分为多个步骤，这些步骤的执行次序在一个被称为 "模版方法" 的方法中定义，而算法的每个步骤都对应着一个方法，
这些方法被称为 "基本方法"。模板方法按照它定义的顺序依次调用多个基本方法，从而实现整个算法流程。在模板方法模式中，会将模版方法的实现以及
那些固定不变的基本方法的实现放在父类中，而那些不固定的基本方法中在父类中只是抽象方法，其真正的实现代码会被延迟到子类中完成。

模板方法模式可以将模版方法以及固定不变的基本方法统一封装到父类中，而将变化的部分封装到子类中实现，这样就由父类控制整个算法的流程，
而子类实现算法的某些细节，实现了这两方面的解耦。


组成；
1、模板方法：定义在抽象类中，把基本操作方法组合在一起形成一个总算法或一个总行为的方法。
2、基本方法
    1. 抽象方法：一个抽象方法由抽象类声明，由其子类实现
    2. 具体方法：一个具体方法由一个抽象类或具体类声明并实现，其子类可以进行覆盖也可以直接继承
    3. 钩子方法：一个钩子方法由一个抽象类或具体类声明并实现，而其子类可能会加以扩展。钩子方法可以控制父类的行为